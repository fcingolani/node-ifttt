// Generated by CoffeeScript 1.8.0
(function() {
  var EventEmitter, XMLRPCServer, extend, parseText;

  EventEmitter = require('events').EventEmitter;

  XMLRPCServer = require('./xmlrpcServer');

  extend = function(obj, mixin) {
    var method, name;
    for (name in mixin) {
      method = mixin[name];
      obj[name] = method;
    }
    return obj;
  };

  parseText = function(text) {
    var data, match, re;
    re = /\[(.*)\](.*)\[\/\1\]/g;
    data = {};
    while (match = re.exec(text)) {
      data[match[1]] = match[2];
    }
    return data;
  };

  module.exports = function(options) {
    var credentialsAreWrong, middleware, path, server, _ref;
    if (options == null) {
      options = {};
    }
    path = (_ref = options.path) != null ? _ref : '/xmlrpc.php';
    server = new XMLRPCServer;
    middleware = function(req, res, next) {
      if (req.method === 'POST' && req.url === path) {
        return server.handleMethodCall(req, res, next);
      } else {
        return next();
      }
    };
    extend(middleware, EventEmitter.prototype);
    credentialsAreWrong = function(params) {
      return !(params[1] === options.user && params[2] === options.password);
    };
    server.on('mt.supportedMethods', function(err, params, cb) {
      if (credentialsAreWrong(params)) {
        return cb("Unauthorized");
      }
      return cb(null, 'metaWeblog.getRecentPosts');
    });
    server.on('metaWeblog.getRecentPosts', function(err, params, cb) {
      if (credentialsAreWrong(params)) {
        return cb("Unauthorized");
      }
      return cb(null, []);
    });
    server.on('metaWeblog.newPost', function(err, params, cb) {
      if (credentialsAreWrong(params)) {
        return cb("Unauthorized");
      }
      middleware.emit(params[3].title, parseText(params[3].description));
      return cb(null, new Date().getTime());
    });
    return middleware;
  };

}).call(this);
